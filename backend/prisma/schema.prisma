// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int        @id @default(autoincrement())
  name          String?    @db.VarChar(50)
  email         String     @unique
  password      String
  postcode      String?    @db.VarChar(10)
  address1      String?    @db.VarChar(100)
  address2      String?    @db.VarChar(100)
  address3      String?    @db.VarChar(100)
  telPhone      String?    @db.VarChar(15)
  create_at     DateTime   @default(now())
  update_at     DateTime   @updatedAt
  status        Boolean    @default(true)
  emailAuth     Boolean    @default(false)
  token         String?    @unique @db.VarChar(255)
  stripe_cus_id String?
  stripe_sub_id String?
  contract      Contract[]
}

model Contract {
  id           Int              @id @default(autoincrement())
  product_id   Int
  product      Product          @relation(fields: [product_id], references: [id])
  user_id      Int
  user         User             @relation(fields: [user_id], references: [id])
  contract_at  DateTime         @default(now())
  timezone_id  Int
  timezone     DeliveryTimezone @relation(fields: [timezone_id], references: [id])
  deliveryDate DateTime         @db.Date
  status_id    Int
  status       Status           @relation(fields: [status_id], references: [id])
  orderDate    DateTime         @db.Date
  delivery     Delivery[]
}

model DeliveryTimezone {
  id       Int        @id @default(autoincrement())
  timezone String     @db.VarChar(10)
  contract Contract[]
}

model Status {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(10)
  contract Contract[]
}

model Recommend {
  id         Int     @id @default(autoincrement())
  product_id Int
  product    Product @relation(fields: [product_id], references: [id])
  email      String  @unique
}

model Delivery {
  id           Int      @id @default(autoincrement())
  contract_id  Int
  contract     Contract @relation(fields: [contract_id], references: [id])
  create_at    DateTime @default(now())
  deliveryDate DateTime @db.Date
  address      String
  product_id   Int
  product      Product  @relation(fields: [product_id], references: [id])
  name         String
  price        Int
  telPhone     String
}

model Product {
  id            Int         @id @default(autoincrement())
  name          String      @db.VarChar(20)
  introduction  String      @db.VarChar(250)
  price         Int         @db.SmallInt
  imgUrl        String
  category_id   Int
  category      Category    @relation(fields: [category_id], references: [id])
  stripe_id     String
  deliveryCycle Int
  contract      Contract[]
  recommend     Recommend[]
  Delivery      Delivery[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(20)
  products Product[]
}

model Question {
  id       Int    @id @default(autoincrement())
  question String @db.VarChar(200)
  choice1  String @db.VarChar(50)
  choice2  String @db.VarChar(50)
  choice3  String @db.VarChar(50)
  choice4  String @db.VarChar(50)
}
